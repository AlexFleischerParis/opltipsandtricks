    using CP;
    string equation="SEND+MORE==MONEY";
    //string equation="DURER + MANET + MATISSE + SEURAT == ARTISTS";

     

    {string} unknown={};
    {string} nonzeros={};
    {string} figures={};

    execute
    {

    // ""SEND" ==> 1000*S+100*E+10*N+1*D
    function getFormula(figure)
    {
    var res="";

    for(var i=0;i<figure.length;i++)
    {
      if (i!=0) res+="+";
      res+="1";
      for(var j=i+1;j<figure.length;j++) res+="0";
      res+="*";
      res+=figure.charAt(i);
    }
    return res;
    }
    }

     

     
    execute parse
    {
        

        var previousFigureNotAnUnknown=1;
        var figure="";

        for(var i=0;i<=equation.length;i++)
        {
            if (("A"<=equation.charAt(i)) && (equation.charAt(i)<="Z")
            || ("a"<=equation.charAt(i) && equation.charAt(i)<="z")
             )
            {
                    figure+=equation.charAt(i);        
                    unknown.add(equation.charAt(i));
                    if (previousFigureNotAnUnknown==1) nonzeros.add(equation.charAt(i));;
                    previousFigureNotAnUnknown=0;
            }    
            else
            {
                  previousFigureNotAnUnknown=1;    
                  if (figure!="") figures.add(figure);
                  figure="";
           }        
        }    
        
        
    }

    {string} figuresthatcouldbe0=unknown diff nonzeros;

    assert card(unknown)<=10;

    execute
    {
    var quote="\"";

    var f=new IloOplOutputFile("cryptainstance.mod");
    f.writeln("// This model is generated by some OPL code out of ",equation);
    f.writeln("using CP;");
    f.writeln();

    f.writeln("range r=0..9;");
    f.writeln("range rwithout0=1..9;");
    for(var i in nonzeros)
        f.writeln("dvar int ",i," in rwithout0;");
    for(var i in figuresthatcouldbe0)
        f.writeln("dvar int ",i," in r;");    
    f.writeln();
    for(var i in figures)
      f.writeln("dvar int ",i,";");
    f.writeln();  

    f.writeln("subject to {");

    f.writeln(equation,";");
    f.writeln();

    for(var i in figures)
        f.writeln(i," == ",getFormula(i),";");
    f.writeln();

    f.write("allDifferent(append(");
    for(var i in unknown)
    {
      f.write(i);
      if (i!=Opl.last(unknown)) f.write(",");
    }
    f.writeln("));");

    f.writeln("}");

    f.writeln();
    f.writeln("execute {");

    for(var i in figures)
        f.writeln("writeln(",quote,i," = ",quote,",",i,");");    
    f.writeln("}");
        
    f.close();    
    }

     


    // loop to get all solutions
     main
    {
    cp.param.SearchType=24;
    cp.param.workers=1;

    var source = new IloOplModelSource("cryptainstance.mod");
    var cplex = new IloCP();
    var def = new IloOplModelDefinition(source);
    var opl = new IloOplModel(def,cp);
     
    opl.generate();
     
    cp.startNewSearch();
    while
    (cp.next()) {  opl.postProcess(); }
    }

/*

gives

    SEND = 9567
    MORE = 1085
    MONEY = 10652

which is a solution to the famous SEND MORE MONEY puzzle.

What is behind is that this model generates cryptainstance.mod (see below) and then call this model to get all feasible solutions.

    // This model is generated by some OPL code out of SEND+MORE==MONEY
    using CP;

    range r=0..9;
    range rwithout0=1..9;
    dvar int S in rwithout0;
    dvar int M in rwithout0;
    dvar int E in r;
    dvar int N in r;
    dvar int D in r;
    dvar int O in r;
    dvar int R in r;
    dvar int Y in r;

    dvar int SEND;
    dvar int MORE;
    dvar int MONEY;

    subject to {
    SEND+MORE==MONEY;

    SEND == 1000*S+100*E+10*N+1*D;
    MORE == 1000*M+100*O+10*R+1*E;
    MONEY == 10000*M+1000*O+100*N+10*E+1*Y;

    allDifferent(append(S,E,N,D,M,O,R,Y));
    }

    execute {
    writeln("SEND = ",SEND);
    writeln("MORE = ",MORE);
    writeln("MONEY = ",MONEY);
    }

*/